# MeBeatMe Subdomain Deployment Configuration
# For ready2race.me domain integration

# Nginx Configuration for mebeatme.ready2race.me
server {
    listen 80;
    listen 443 ssl http2;
    server_name mebeatme.ready2race.me;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/mebeatme.ready2race.me.crt;
    ssl_certificate_key /etc/ssl/private/mebeatme.ready2race.me.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # API Proxy to Ktor Server
    location /api/ {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS Headers
        add_header Access-Control-Allow-Origin "https://mebeatme.ready2race.me, https://ready2race.me" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://mebeatme.ready2race.me, https://ready2race.me";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # Health Check
    location /health {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static Web Dashboard
    location / {
        root /var/www/mebeatme;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # File Upload Directory
    location /uploads/ {
        alias /var/uploads/mebeatme/;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Logging
    access_log /var/log/nginx/mebeatme.ready2race.me.access.log;
    error_log /var/log/nginx/mebeatme.ready2race.me.error.log;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name mebeatme.ready2race.me;
    return 301 https://$server_name$request_uri;
}
